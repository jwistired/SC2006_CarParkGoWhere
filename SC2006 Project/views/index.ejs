<html>
   <head>
      <title>OneMap: Default Map (TileJSON)</title>
      <link rel="stylesheet" href="https://www.onemap.gov.sg/web-assets/libs/leaflet/leaflet.css" />
      <script src="https://www.onemap.gov.sg/web-assets/libs/leaflet/onemap-leaflet.js"></script>
      <script src="https://www.onemap.gov.sg/web-assets/libs/leaflet/leaflet-tilejson.js"></script>
      <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=search" />
      <link rel="stylesheet" href="\css\styles_2.css">
   </head>

   <body>
      <!-- Header with logo, search bar, filter, and login/register -->
      <div class="header">
         <!-- Logo -->
         <img src="\css\images\logo.jpg" alt="Logo" class="logo">
         
         <!-- Search bar with search icon -->
         <div class="search-bar">
            <class class="search-input">
               <form autocomplete="on" onsubmit="searchLocation()">
                  <input class="search-input" type="search" id="search" placeholder="Search for parking lots">
                  <button class="search-icon-btn" onclick="searchLocation()">
                     <img src="\css\images\icons\search.png">
                  </button>
               </form>
            </class>
         </div>

         <!-- Filter dropdown -->
          <button  class="filter-button w3-button" onclick="toggleFilterDropdown()">
            <img src="\css\images\icons\filter.png" class="filter-icon" >
            <span class="filter-caption">Filter</span>
          </button>

          <!-- Logout icon -->
          <button class="logout-btn w3-button" onclick="logout()">
            <img src="\css\images\icons\login-register.png" class="login-icon">
            <span class="logout-caption">Logout</span>
          </button>
      </div>

      <div class="content">
         <!-- Sidebar for parking lots -->
         <div class="sidebar">
            <h2>Parking Lots Found</h2>
            <div id="parking-lots">
               <!-- Parking lot info will be dynamically added here -->
            </div>
         </div>

      <!-- MAP -->
      <div id='mapdiv' style='height:800px;'></div>
          
      <!-- Right sidebar for parking history -->
      <div class="history-sidebar">
      <h2>Parking History</h2>
         <div id="parking-history">
         <!-- Parking history info will be dynamically added here -->
         </div>
      </div>

    <!-- Filter Dropdown -->
    <div class="filter-dropdown" id="filterDropdown">  
      <div >
         <label class="switch">
            <input type="checkbox">
               <span class="slider round">
               </span> 
         </label>
      </div>
      <div class="slider-text" >Distance</div>
      <div >
         <label class="switch">
            <input type="checkbox">
               <span class="slider round">
               </span> 
         </label>
      </div>
      <div class="slider-text">Cheapest Carpark</div>
      <div >
         <label class="switch">
            <input type="checkbox">
               <span class="slider round">
               </span> 
         </label>
      </div>
      <div class="slider-text">Parking Lots</div>
    </div>
   
      <!-- Filter options
      <div class="filter-options">
         <h3>Filter Options</h3>
         <label>
            <input type="checkbox" id="shortest-distance-filter"> Shortest Distance
         </label>
         <label>
            <input type="checkbox" id="cheapest-parking-filter"> Cheapest Car Park
         </label>
         <label>
            <input type="checkbox" id="availability-filter"> Parking Lots Availability
         </label>
      </div> -->

      <!-- Logout button -->
      <form action="/logout?_method=DELETE" method="POST">
         <button type = "submit">Log Out</button>
      </form>

      <script>
         // Function to toggle filter dropdown
          function toggleFilterDropdown() {
            const dropdown = document.getElementById('filterDropdown');
            dropdown.style.display = dropdown.style.display === 'flex' ? 'none' : 'flex';
            dropdown.style.flexDirection = 'column';
          }

         function logout() {
            fetch('/logout', {
               method: 'DELETE'
            }).then(response => {
                if (response.redirected) {
                  sessionStorage.clear();
                  window.location.href = response.url;
                }
            })
         }

        // Hide dropdown when clicking outside
        document.addEventListener('click', function(event) {
            const dropdown = document.getElementById('filterDropdown');
            if (!event.target.closest('.filter-button') && !event.target.closest('.filter-dropdown')) {
                dropdown.style.display = 'none';
            }
        });
         // Define Singapore boundary
         let sw = L.latLng(1.144, 103.535);
         let ne = L.latLng(1.494, 104.502);
         let bounds = L.latLngBounds(sw, ne);
         let map;

         // Fetch OneMap TileJSON and initialize map
         $.get("https://www.onemap.gov.sg/maps/json/raster/tilejson/2.2.0/Default.json", function(data, status) {
            map = L.TileJSON.createMap('mapdiv', data);
            map.setMaxBounds(bounds);
            map.setView(L.latLng(1.2868108, 103.8545349), 16);

            // Add attribution
            map.attributionControl.setPrefix('<img src="https://www.onemap.gov.sg/web-assets/images/logo/om_logo.png" style="height:20px;width:20px;"/>&nbsp;<a href="https://www.onemap.gov.sg/" target="_blank" rel="noopener noreferrer">OneMap</a>&nbsp;&copy;&nbsp;contributors&nbsp;&#124;&nbsp;<a href="https://www.sla.gov.sg/" target="_blank" rel="noopener noreferrer">Singapore Land Authority</a>');
         });

         // Simulated data for car parks (you would fetch this from OneMap API)
         const parkingLots = [
            { id: 1, lat: 1.3521, lng: 103.8198, title: 'Car Park 1', price: 0.50, distance: 200, availability: 37 },
            { id: 2, lat: 1.3531, lng: 103.8190, title: 'Car Park 2', price: 0.60, distance: 300, availability: 25 },
            { id: 3, lat: 1.3541, lng: 103.8185, title: 'Car Park 3', price: 0.55, distance: 400, availability: 23 }
         ];

         // Function to display parking lots
         function displayParkingLots(parkingLots) {
            parkingLots.forEach(lot => {
               // Add marker to the map
               const marker = L.marker([lot.lat, lot.lng]).addTo(map)
                  .bindPopup(`<strong>${lot.title}</strong><br>Price: $${lot.price}/hour<br>Distance: ${lot.distance}m<br>Availability: ${lot.availability}/50`);

               // Append parking lot info to the sidebar
               const parkingLotDiv = document.createElement('div');
               parkingLotDiv.classList.add('parking-lot');
               parkingLotDiv.innerHTML = `
                  <h3>${lot.title}</h3>
                  <p>Price: $${lot.price} / hour</p>
                  <p>Distance: ${lot.distance}m</p>
                  <p>Availability: ${lot.availability}/50 spots</p>
                  <button>Select</button>
               `;
               document.getElementById('parking-lots').appendChild(parkingLotDiv);
            });
         }

         // Function to search for locations using OneMap API
         function searchLocation() {
            const searchQuery = document.getElementById('search').value;

            if (searchQuery.trim() !== "") {
               const url = `https://developers.onemap.sg/commonapi/search?searchVal=${searchQuery}&returnGeom=Y&getAddrDetails=N`;

               $.get(url, function(data) {
                  if (data.results.length > 0) {
                     const firstResult = data.results[0]; // Take the first result

                     // Extract the latitude and longitude of the search result
                     const lat = parseFloat(firstResult.LATITUDE);
                     const lng = parseFloat(firstResult.LONGITUDE);

                     // Add a marker for the searched location
                     const searchMarker = L.marker([lat, lng]).addTo(map)
                        .bindPopup(`Search Result: ${firstResult.SEARCHVAL}`)
                        .openPopup();

                     // Center the map to the search result location
                     map.setView([lat, lng], 16);
                  } else {
                     alert("No results found.");
                  }
               });
            } else {
               alert("Please enter a location to search for.");
            }
         }

         // Attach event listener to the search button or input field
         document.getElementById('search').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
               searchLocation();
            }
         });


         // Function to simulate parking history
         function displayParkingHistory() {
            const history = [
               { id: 5, title: 'Car Park 5', price: 0.55, distance: 400, availability: 23 }
            ];

            history.forEach(lot => {
               const historyDiv = document.createElement('div');
               historyDiv.classList.add('parking-history');
               historyDiv.innerHTML = `
                  <h3>${lot.title}</h3>
                  <p>Price: $${lot.price} / hour</p>
                  <p>Distance: ${lot.distance}m</p>
                  <p>Availability: ${lot.availability}/50 spots</p>
                  <button>Select</button>
               `;
               document.getElementById('parking-history').appendChild(historyDiv);
            });
         }

         // Function to get user location and add marker
         function showUserLocation() {
            if (navigator.geolocation) {
               navigator.geolocation.getCurrentPosition(function(position) {
                     const userLatLng = L.latLng(position.coords.latitude, position.coords.longitude);

                     // Add marker for user location
                     const userMarker = L.marker(userLatLng).addTo(map)
                        .bindPopup('Your Location')
                        .openPopup();

                     // Center the map to the user's location
                     map.setView(userLatLng, 16);
               }, function(error) {
                     console.error("Error getting location: ", error.message);
               });
            } else {
               alert("Geolocation is not supported by this browser.");
            }
         }

         // Call the function to show user location
         showUserLocation();
        


         // Display initial data
         displayParkingLots(parkingLots);
         displayParkingHistory();

         // Optional: Implement filter functionality
         document.getElementById('shortest-distance-filter').addEventListener('change', function () {
            console.log('Shortest distance filter toggled');
            // You can implement sorting logic here
         });

         document.getElementById('cheapest-parking-filter').addEventListener('change', function () {
            console.log('Cheapest parking filter toggled');
            // You can implement sorting logic here
         });

         document.getElementById('availability-filter').addEventListener('change', function () {
            console.log('Availability filter toggled');
            // You can implement sorting logic here
         });
      </script>
   </body>
</html>
